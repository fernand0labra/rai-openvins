<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="world_name" default="rotors_simulator"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />

  <arg name="circle_axes" default="zy"/>

  <arg name="bag_topics"  default="/firefly/ground_truth/odometry /firefly/ground_truth/imu /cam0/image_raw /cam1/image_raw /imu0"/>
  <arg name="bag_start"   default="0" /> <!-- v1-2: 0, mh1: 40, mh2: 35, mh3: 17.5, mh4-5: 15 -->
  <arg name="bag_rate"    default="1" />
  <arg name="bag"     default="$(find simulation)/data/rotors_simulator_circle_$(arg circle_axes).bag" />
  <arg name="makebag" default="false" />

  <remap from="/firefly/vi_sensor/left/image_raw" to="/cam0/image_raw" />
  <remap from="/firefly/vi_sensor/right/image_raw" to="/cam1/image_raw" />
  <remap from="/firefly/vi_sensor/imu" to="/imu0" />

  <node pkg="tf" type="tf_remap" name="tf_remapper" output="screen">
        <rosparam param="mappings"> [{old: world, new: /global}] </rosparam>
  </node>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"    value="$(find simulation)/worlds/$(arg world_name).world" />
    <!-- <arg name="debug"    value="true"/> -->
    <arg name="paused"        value="false"/>
    <arg name="gui"           value="false"/>
    <!-- <arg name="verbose"  value="true"/> -->
  </include>

  <group ns="$(arg mav_name)">

    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name"              value="$(arg mav_name)" />
      <arg name="model"                 value="$(find rotors_description)/urdf/mav_with_vi_sensor.gazebo" />
      <arg name="enable_logging"        value="$(arg enable_logging)" />
      <arg name="enable_ground_truth"   value="$(arg enable_ground_truth)" />
      <arg name="log_file"              value="$(arg log_file)"/>
    </include>

    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find simulation)/rviz/rotors_simulator.rviz" />

  <!-- start the simulation -->
  <!-- <node type="rotors_simulator.py" name="rotors_simulator" pkg="simulation" args="$(arg circle_axes)"/> -->

  <!-- record the dataset -->
  <group if="$(arg makebag)">
      <node pkg="rosbag" type="record" name="rosbag" args="-O $(arg bag) $(arg bag_topics)" required="true">
          <remap from="tf_old" to="tf" />
      </node>
  </group>

</launch>
